---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "../../layouts/Layout.astro";

import Artwork from "../../components/Artwork.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const artistEntries = await getCollection("artist");

    return artistEntries.map((artistEntry) => ({
        params: { slug: artistEntry.slug },
        props: { artistEntry },
    }));
}
// 2. For your template, you can get the entry directly from the prop
const { artistEntry } = Astro.props;

const { Content } = await artistEntry.render();

const artwork = await getCollection("artwork", ({ data }) => {
    return data.artist.slug === artistEntry.slug;
});
---

<Layout title={artistEntry.data.name}>
    <div class="artist-header">
        <a class="anchor-dark" href="/kunstenaars/">Terug naar overzicht</a>
        <p>Kunstenaar</p>
        <h1>{artistEntry.data.name}</h1>
    </div>
    <div class="artist-main">
        <div class="artist-cover">
            <Image src={artistEntry.data.cover} alt="" />
        </div>
        <div class="artist-about">
            <h2>Over de kunstenaar</h2>
            <Content />
            <a class="anchor-dark" href="/contact/">Vragen? Contacteer ons</a>
        </div>
        <div class="artist-education">
            {artistEntry.data.education && <h2>Opleidingen</h2>}
            <ul>
                {
                    artistEntry.data.education &&
                        artistEntry.data.education.map((educationEntry) => (
                            <li>{educationEntry}</li>
                        ))
                }
            </ul>
        </div>
        <div class="artist-techniques">
            {artistEntry.data.techniques && <h2>Technieken</h2>}
            <ul>
                {
                    artistEntry.data.techniques &&
                        artistEntry.data.techniques.map((techniquesEntry) => (
                            <li>{techniquesEntry}</li>
                        ))
                }
            </ul>
        </div>
    </div>
    <div>
        {
            artwork && artwork.length !== 0 && (
                <>
                    <p>Kunstwerken</p>
                    <h1>Kunst van {artistEntry.data.name}</h1>
                </>
            )
        }
        <div class="grid-staggered-2">
            {
                artwork &&
                    artwork.map((artwork) => (
                        <div>
                            <Artwork artwork={artwork} />
                        </div>
                    ))
            }
        </div>
    </div>
</Layout>

<style>
    .artist-header > p,
    .artist-header > h1 {
        text-align: center;
    }

    .artist-main {
        display: flex;
        flex-wrap: wrap;
        gap: var(--gap);
    }

    .artist-cover {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-about {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-education {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-techniques {
        width: calc(50% - var(--gap) / 2);
    }

    @media (max-width: 1200px) {
        .artist-cover,
        .artist-about,
        .artist-education,
        .artist-techniques {
            width: 100%;
        }
    }
</style>
