---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "../../layouts/Layout.astro";

import Artwork from "../../components/Artwork.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const artistEntries = await getCollection("artist");

    return artistEntries.map((artistEntry) => ({
        params: { slug: artistEntry.slug },
        props: { artistEntry },
    }));
}
// 2. For your template, you can get the entry directly from the prop
const { artistEntry } = Astro.props;

const { Content, headings, remarkPluginFrontmatter } =
    await artistEntry.render();

const artwork = await getCollection("artwork", ({ data }) => {
    return data.artist.slug === artistEntry.slug;
});
---

<Layout title={artistEntry.data.name}>
    <div>
        <a href="/">Welkom</a> &gt; <a href="/kunstenaars/">Kunstenaars</a> &gt;
        <h1 class="artist-name">{artistEntry.data.name}</h1>
    </div>
    <div class="artist-main">
        <div class="artist-image">
            <Image src={artistEntry.data.cover} alt="" />
        </div>
        <div class="artist-about">
            <h2>Over de kunstenaar</h2>
            <Content />
            <a class="anchor-dark" href="/contact/">Vragen? Contacteer ons</a>
        </div>
        <div class="artist-education">
            {artistEntry.data.education && <h2>Opleidingen</h2>}
            <ul>
                {
                    artistEntry.data.education &&
                        artistEntry.data.education.map((educationEntry) => (
                            <li>{educationEntry}</li>
                        ))
                }
            </ul>
        </div>
        <div class="artist-techniques">
            {artistEntry.data.techniques && <h2>Technieken</h2>}
            <ul>
                {
                    artistEntry.data.techniques &&
                        artistEntry.data.techniques.map((techniquesEntry) => (
                            <li>{techniquesEntry}</li>
                        ))
                }
            </ul>
        </div>
    </div>
    <div>
        <h2>Kunstwerken</h2>
        <div class="artist-artwork">
            {
                artwork.map((artwork) => (
                    <div>
                        <Artwork artwork={artwork} />
                    </div>
                ))
            }
        </div>
    </div>
</Layout>

<style>
    .artist-name {
        text-align: center;
    }

    .artist-main {
        display: flex;
        flex-wrap: wrap;
        gap: var(--gap);
    }

    .artist-image {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-about {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-education {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-techniques {
        width: calc(50% - var(--gap) / 2);
    }

    .artist-image > img {
        width: 100%;
        height: auto;
    }

    .artist-artwork {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
        row-gap: calc(2 * var(--gap));
    }

    .artist-artwork > div:nth-child(4n + 1) {
        grid-column-start: 1;
        grid-column-end: 6;
    }

    .artist-artwork > div:nth-child(4n + 2) {
        grid-column-start: 7;
        grid-column-end: 12;
        margin-top: calc(2 * var(--gap));
    }

    .artist-artwork > div:nth-child(4n + 3) {
        grid-column-start: 2;
        grid-column-end: 7;
    }

    .artist-artwork > div:nth-child(4n + 4) {
        grid-column-start: 8;
        grid-column-end: 13;
        margin-top: calc(2 * var(--gap));
    }

    @media (max-width: 1200px) {
        .artist-image,
        .artist-about,
        .artist-education,
        .artist-techniques {
            width: 100%;
        }
    }

    @media (max-width: 768px) {
        .artist-artwork {
            grid-template-columns: 1fr;
            row-gap: var(--gap);
        }

        .artist-artwork > div:nth-child(n) {
            margin-top: 0px;
            grid-column-start: 1;
            grid-column-end: 2;
        }
    }
</style>
